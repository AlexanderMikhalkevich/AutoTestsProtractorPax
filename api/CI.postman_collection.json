{
  "info": {
    "_postman_id": "d436dcf1-4fb5-4e60-9366-6952c3395990",
    "name": "CI",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "v2",
          "item": [
            {
              "name": "Register new user v2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7abd02bb-b80d-4933-8568-484e2f0955de",
                    "exec": [
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['accessToken', 'refreshToken', 'expiresIn'],",
                      "    properties: {",
                      "        expiresIn: {",
                      "            type: 'number'",
                      "        },",
                      "        accessToken: {",
                      "            type: 'string'",
                      "        },",
                      "        refreshToken: {",
                      "            type: 'string'",
                      "        }",
                      "    } ",
                      "}",
                      "",
                      "var jsonData = pm.response.json();",
                      "",
                      "pm.test('validate response', function() {",
                      "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                      "});",
                      "",
                      "pm.environment.set('token', jsonData.data.accessToken);",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "d9aedcc8-8b6b-4239-a221-94b32e7b5159",
                    "exec": [
                      "//Generate UUID and set as environmental variable as well as use same generated UUID for email variable and generate phone number",
                      "var uuid = require('uuid');",
                      "var myUUID = uuid.v4();",
                      "pm.environment.set('uuid', myUUID);",
                      "pm.environment.set('user_email', myUUID + \"@paxful.com\");",
                      "var host = pm.environment.get(\"host\");",
                      "var uuid = pm.environment.get(\"uuid\");",
                      "function send(request) {",
                      "    pm.sendRequest(request, function(err, res) {",
                      "//   console.log(err ? err : res.json());",
                      "});",
                      "}",
                      "",
                      "const userDevice = {",
                      "  url: 'https://' + host + '/mobile/v1/auth/user-device',",
                      "  method: 'POST',",
                      "  header: 'uuid:' + uuid,",
                      "};",
                      "send(userDevice);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  },
                  {
                    "key": "User-Agent",
                    "value": "PMA/Wallet (a10)",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"{{user_email}}\",\n    \"emailConfirmation\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\",\n    \"privacyPolicyConfirmed\": true,\n    \"geetest_challenge\": \"44cdb240ffec1224ÃŽ3a889e767b4235a2\",\n    \"geetest_validate\": \"44cdb240ffec12243a889e767b4235a2\",\n    \"geetest_seccode\": \"44cdb240ffec12243a889e767b4235a2\"\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    ":version",
                    ":category",
                    ":request"
                  ],
                  "variable": [
                    {
                      "key": "version",
                      "value": "v2"
                    },
                    {
                      "key": "category",
                      "value": "auth"
                    },
                    {
                      "key": "request",
                      "value": "register"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3ae9ecf9-cc74-4f6b-93db-3e8003a799d1",
                    "exec": [
                      "//Generate UUID and set as environmental variable as well as use same generated UUID for email variable and generate phone number",
                      "var uuid = require('uuid');",
                      "var myUUID = uuid.v4();",
                      "pm.environment.set('uuid', myUUID);",
                      "pm.environment.set('user_email', myUUID + \"@paxful.com\");",
                      "var host = pm.environment.get(\"host\");",
                      "var uuid = pm.environment.get(\"uuid\");",
                      "function send(request) {",
                      "    pm.sendRequest(request, function(err, res) {",
                      "//   console.log(err ? err : res.json());",
                      "});",
                      "}",
                      "const userDevice = {",
                      "  url: 'https://' + host + '/mobile/v1/auth/user-device',",
                      "  method: 'POST',",
                      "  header: ['uuid:' + uuid , 'User-Agent: PMA/Wallet (a10)'],",
                      "};",
                      "var user_email = pm.environment.get(\"user_email\");",
                      "var user_password = pm.environment.get(\"user_password\");",
                      "const register = {",
                      "  url: 'https://' + host + '/mobile/v2/auth/register',",
                      "  method: 'POST',",
                      "  header: ['uuid: ' + uuid, 'Content-Type: application/json', 'User-Agent: PMA/Wallet (a10)'],",
                      "  body: {",
                      "      mode: 'raw',",
                      "      raw: JSON.stringify({",
                      "        email: user_email,",
                      "        emailConfirmation: user_email,",
                      "        password: user_password,",
                      "        privacyPolicyConfirmed: true",
                      "      })",
                      "  }",
                      "};",
                      "send(userDevice);",
                      "",
                      "pm.sendRequest(register, function(err, res) {",
                      "    pm.environment.set('token', res.json().data.accessToken);",
                      "    // console.log(err ? err : res.json());",
                      "  ",
                      "    const verifyEmail = {",
                      "      url: 'https://' + host + '/mobile/v1/account/verify-email-confirmation?code=000000',",
                      "      method: 'POST',",
                      "      header: ['uuid: ' + uuid, 'Content-Type: application/json', 'authorization: Bearer ' + pm.environment.get('token')],",
                      "    };",
                      "    send(verifyEmail);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "640dbb44-2121-4ca0-bcad-13ab06a621f2",
                    "exec": [
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['accessToken', 'refreshToken', 'expiresIn'],",
                      "    properties: {",
                      "        expireAt: {",
                      "            type: 'number'",
                      "        },",
                      "        accessToken: {",
                      "            type: 'string'",
                      "        },",
                      "        refreshToken: {",
                      "            type: 'string'",
                      "        }",
                      "    } ",
                      "}",
                      "",
                      "var jsonData = pm.response.json();",
                      "",
                      "pm.test('validate response', function() {",
                      "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                      "});",
                      "",
                      "pm.environment.set('token', jsonData.data.accessToken);",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "User-Agent",
                    "value": "PMA/Wallet (a10)",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    ":version",
                    ":category",
                    ":request"
                  ],
                  "variable": [
                    {
                      "key": "version",
                      "value": "v2"
                    },
                    {
                      "key": "category",
                      "value": "auth"
                    },
                    {
                      "key": "request",
                      "value": "login"
                    }
                  ]
                },
                "description": "Register uuid of device"
              },
              "response": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "e64402ae-ab90-4a15-ab42-c701f68d15bc",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "58634e77-fef8-4c12-a279-c083bdb5abc8",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "v1.2",
          "item": [
            {
              "name": "Register new user v1",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "aacda81d-9727-439a-800c-4a1c8ab65b5d",
                    "exec": [
                      "//Generate UUID and set as environmental variable as well as use same generated UUID for email variable and generate phone number",
                      "var uuid = require('uuid');",
                      "var myUUID = uuid.v4();",
                      "pm.environment.set('uuid', myUUID);",
                      "pm.environment.set('user_email', myUUID + \"@paxful.com\");",
                      "var host = pm.environment.get(\"host\");",
                      "var uuid = pm.environment.get(\"uuid\");",
                      "function send(request) {",
                      "    pm.sendRequest(request, function(err, res) {",
                      "//   console.log(err ? err : res.json());",
                      "});",
                      "}",
                      "",
                      "const userDevice = {",
                      "  url: 'https://' + host + '/mobile/v1/auth/user-device',",
                      "  method: 'POST',",
                      "  header: 'uuid:' + uuid,",
                      "};",
                      "send(userDevice);"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "3e3ce829-01ea-4fe7-9892-437d9d031ad2",
                    "exec": [
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['token', 'expireAt'],",
                      "    properties: {",
                      "        expireAt: {",
                      "            type: 'number'",
                      "        },",
                      "        token: {",
                      "            type: 'string'",
                      "        }",
                      "    } ",
                      "}",
                      "",
                      "//Set response token as environmantal variable",
                      "var jsonData = pm.response.json();",
                      "pm.environment.set('token', jsonData.data.token);",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Body is correct\", function() {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.data.error).to.eql(\"email_is_not_verified_exception\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "uuid",
                    "value": "{{uuid}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"{{user_email}}\",\n    \"emailConfirmation\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\",\n    \"privacyPolicyConfirmed\": true\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    ":version",
                    ":category",
                    ":request"
                  ],
                  "variable": [
                    {
                      "key": "version",
                      "value": "v1.2"
                    },
                    {
                      "key": "category",
                      "value": "auth"
                    },
                    {
                      "key": "request",
                      "value": "register"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Login v1.2",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "d535fa31-08c3-4848-8c0b-7bf9075d5b05",
                    "exec": [
                      "//Generate UUID and set as environmental variable as well as use same generated UUID for email variable and generate phone number",
                      "var uuid = require('uuid');",
                      "var myUUID = uuid.v4();",
                      "pm.environment.set('uuid', myUUID);",
                      "pm.environment.set('user_email', myUUID + \"@paxful.com\");",
                      "var host = pm.environment.get(\"host\");",
                      "var uuid = pm.environment.get(\"uuid\");",
                      "function send(request) {",
                      "    pm.sendRequest(request, function(err, res) {",
                      "//   console.log(err ? err : res.json());",
                      "});",
                      "}",
                      "",
                      "const userDevice = {",
                      "  url: 'https://' + host + '/mobile/v1/auth/user-device',",
                      "  method: 'POST',",
                      "  header: 'uuid:' + uuid,",
                      "};",
                      "send(userDevice);"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "6e7b5eea-3cd1-45eb-a55a-49791c282747",
                    "exec": [
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['token', 'expireAt'],",
                      "    properties: {",
                      "        expireAt: {",
                      "            type: 'number'",
                      "        },",
                      "        token: {",
                      "            type: 'string'",
                      "        }",
                      "    } ",
                      "}",
                      "",
                      "//Set response token as environmantal variable",
                      "var jsonData = pm.response.json();",
                      "pm.environment.set('token', jsonData.data.token);",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Body is correct\", function() {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.data.error).to.eql(\"email_is_not_verified_exception\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    ":version",
                    ":category",
                    ":request"
                  ],
                  "variable": [
                    {
                      "key": "version",
                      "value": "v1.2"
                    },
                    {
                      "key": "category",
                      "value": "auth"
                    },
                    {
                      "key": "request",
                      "value": "register"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "with 2FA",
          "item": [
            {
              "name": "Authorize user with 2FA GA",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e75c8c55-a7fe-42a4-b1ca-b14265dae679",
                    "exec": [
                      "//Generate UUID and set as environmental variable as well as use same generated UUID for email variable and generate phone number",
                      "var uuid = require('uuid');",
                      "var myUUID = uuid.v4();",
                      "pm.environment.set('uuid', myUUID);",
                      "pm.environment.set('user_email', myUUID + \"@paxful.com\");",
                      "var host = pm.environment.get(\"host\");",
                      "var uuid = pm.environment.get(\"uuid\");",
                      "var qa_two_factor_code = '000000';",
                      "function send(request) {",
                      "    pm.sendRequest(request, function(err, res) {",
                      "//   console.log(err ? err : res.json());",
                      "});",
                      "}",
                      "const userDevice = {",
                      "  url: 'https://' + host + '/mobile/v1/auth/user-device',",
                      "  method: 'POST',",
                      "  header: 'uuid:' + uuid,",
                      "};",
                      "var user_email = pm.environment.get(\"user_email\");",
                      "var user_password = pm.environment.get(\"user_password\");",
                      "const register = {",
                      "  url: 'https://' + host + '/mobile/v1.2/auth/register',",
                      "  method: 'POST',",
                      "  header: ['uuid: ' + uuid, 'Content-Type: application/json'],",
                      "  body: {",
                      "      mode: 'raw',",
                      "      raw: JSON.stringify({",
                      "        email: user_email,",
                      "        emailConfirmation: user_email,",
                      "        password: user_password,",
                      "        privacyPolicyConfirmed: true",
                      "      })",
                      "  }",
                      "};",
                      "send(userDevice);",
                      "    const enable2faGA = {",
                      "  url: 'https://' + host + '/mobile/v1/account/two-factor',",
                      "  method: 'POST',",
                      "  header: ['uuid: ' + uuid, 'Content-Type: application/json', 'authorization: Bearer ' + pm.environment.get('token')],",
                      "  body: {",
                      "      mode: 'raw',",
                      "      raw: JSON.stringify({",
                      "        code: qa_two_factor_code,",
                      "        method: 'ga',",
                      "        type: 'login',",
                      "        gaSecret: qa_two_factor_code",
                      "      })",
                      "  }",
                      "};",
                      "send(enable2faGA);",
                      "pm.sendRequest(register, function(err, res) {",
                      "    pm.environment.set('token', res.json().data.token);",
                      "//   console.log(err ? err : res.json());",
                      "  ",
                      "    const verifyEmail = {",
                      "      url: 'https://' + host + '/mobile/v1/account/verify-email-confirmation?code=000000',",
                      "      method: 'POST',",
                      "      header: ['uuid: ' + uuid, 'Content-Type: application/json', 'authorization: Bearer ' + pm.environment.get('token')],",
                      "    };",
                      "    send(verifyEmail);",
                      "",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "cc8453b7-d624-4125-8d91-d4c2c34968af",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['token', 'expireAt'],",
                      "    properties: {",
                      "        expireAt: {",
                      "            type: 'number'",
                      "        },",
                      "        token: {",
                      "            type: 'string'",
                      "        }",
                      "    } ",
                      "}",
                      "",
                      "pm.test('validate response', function() {",
                      "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                      "});",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\",\n    \"code\": \"{{qa_two_factor_code}}\"\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1.2/auth/login",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    "v1.2",
                    "auth",
                    "login"
                  ]
                },
                "description": "Authorize user with 2FA"
              },
              "response": []
            },
            {
              "name": "Authorize user with 2FA SMS",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "5d66a1b4-64f6-4009-8e53-d4c0511e6458",
                    "exec": [
                      "//Generate UUID and set as environmental variable as well as use same generated UUID for email variable and generate phone number",
                      "var uuid = require('uuid');",
                      "var myUUID = uuid.v4();",
                      "pm.environment.set('uuid', myUUID);",
                      "pm.environment.set('user_email', myUUID + \"@paxful.com\");",
                      "var host = pm.environment.get(\"host\");",
                      "var uuid = pm.environment.get(\"uuid\");",
                      "var qa_two_factor_code = '000000';",
                      "function send(request) {",
                      "    pm.sendRequest(request, function(err, res) {",
                      "//   console.log(err ? err : res.json());",
                      "});",
                      "}",
                      "const userDevice = {",
                      "  url: 'https://' + host + '/mobile/v1/auth/user-device',",
                      "  method: 'POST',",
                      "  header: 'uuid:' + uuid,",
                      "};",
                      "var user_email = pm.environment.get(\"user_email\");",
                      "var user_password = pm.environment.get(\"user_password\");",
                      "const register = {",
                      "  url: 'https://' + host + '/mobile/v1.2/auth/register',",
                      "  method: 'POST',",
                      "  header: ['uuid: ' + uuid, 'Content-Type: application/json'],",
                      "  body: {",
                      "      mode: 'raw',",
                      "      raw: JSON.stringify({",
                      "        email: user_email,",
                      "        emailConfirmation: user_email,",
                      "        password: user_password,",
                      "        privacyPolicyConfirmed: true",
                      "      })",
                      "  }",
                      "};",
                      "send(userDevice);",
                      "    const enable2faGA = {",
                      "  url: 'https://' + host + '/mobile/v1/account/two-factor',",
                      "  method: 'POST',",
                      "  header: ['uuid: ' + uuid, 'Content-Type: application/json', 'authorization: Bearer ' + pm.environment.get('token')],",
                      "  body: {",
                      "      mode: 'raw',",
                      "      raw: JSON.stringify({",
                      "        code: qa_two_factor_code,",
                      "        method: 'sms',",
                      "        type: 'login',",
                      "        gaSecret: qa_two_factor_code",
                      "      })",
                      "  }",
                      "};",
                      "send(enable2faGA);",
                      "pm.sendRequest(register, function(err, res) {",
                      "    pm.environment.set('token', res.json().data.token);",
                      "//   console.log(err ? err : res.json());",
                      "  ",
                      "    const verifyEmail = {",
                      "      url: 'https://' + host + '/mobile/v1/account/verify-email-confirmation?code=000000',",
                      "      method: 'POST',",
                      "      header: ['uuid: ' + uuid, 'Content-Type: application/json', 'authorization: Bearer ' + pm.environment.get('token')],",
                      "    };",
                      "    send(verifyEmail);",
                      "",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "430894e4-83cd-4a77-afa6-2e8e24e3145f",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['token', 'expireAt'],",
                      "    properties: {",
                      "        expireAt: {",
                      "            type: 'number'",
                      "        },",
                      "        token: {",
                      "            type: 'string'",
                      "        }",
                      "    } ",
                      "}",
                      "",
                      "pm.test('validate response', function() {",
                      "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                      "});",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.set(\"token\", jsonData.data.token);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\",\n    \"code\": \"{{qa_two_factor_code}}\"\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1.2/auth/login",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    "v1.2",
                    "auth",
                    "login"
                  ]
                },
                "description": "Authorize user with 2FA"
              },
              "response": []
            },
            {
              "name": "Request to recover password",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e22e11f6-689d-426d-958d-21ed148d7edc",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "aa6a5631-92c7-4755-82d4-44caabd9dd82",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['email'],",
                      "    properties: {",
                      "        email: {",
                      "            type: 'string'",
                      "        }",
                      "    } ",
                      "}",
                      "",
                      "pm.test('validate response', function() {",
                      "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                      "});",
                      "",
                      "",
                      "pm.test(\"Status code is 202\", function () {",
                      "    pm.response.to.have.status(202);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"email\": \"{{user_email}}\",\n\t\"code\": \"{{qa_two_factor_code}}\"\n\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/auth/password/remind",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    "v2",
                    "auth",
                    "password",
                    "remind"
                  ]
                },
                "description": "Request to recover password"
              },
              "response": []
            },
            {
              "name": "Verify password reset",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2da397a2-e439-43ae-898b-f5f7e5f291d6",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4361c017-e0ec-4604-a226-7a9048d5dc53",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['accessToken'],",
                      "    properties: {",
                      "        accessToken: {",
                      "            type: 'string'",
                      "        }",
                      "    } ",
                      "}",
                      "",
                      "pm.test('validate response', function() {",
                      "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                      "});",
                      "",
                      "pm.test(\"Status code is 202\", function () {",
                      "    pm.response.to.have.status(202);",
                      "    pm.environment.set(\"token\", jsonData.data.token);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"email\": \"{{user_email}}\",\n\t\"code\": \"{{qa_two_factor_code}}\",\n\t\"code_2fa\": \"{{qa_two_factor_code}}\"\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/auth/password/verify-reset",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    "v2",
                    "auth",
                    "password",
                    "verify-reset"
                  ]
                },
                "description": "Request to recover password"
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "without 2FA",
          "item": [
            {
              "name": "Authorize user without 2FA",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "527d326a-f28c-43af-9138-7f4d93d9de27",
                    "exec": [
                      "//Generate UUID and set as environmental variable as well as use same generated UUID for email variable and generate phone number",
                      "var uuid = require('uuid');",
                      "var myUUID = uuid.v4();",
                      "pm.environment.set('uuid', myUUID);",
                      "pm.environment.set('user_email', myUUID + \"@paxful.com\");",
                      "var host = pm.environment.get(\"host\");",
                      "var uuid = pm.environment.get(\"uuid\");",
                      "function send(request) {",
                      "    pm.sendRequest(request, function(err, res) {",
                      "//   console.log(err ? err : res.json());",
                      "});",
                      "}",
                      "const userDevice = {",
                      "  url: 'https://' + host + '/mobile/v1/auth/user-device',",
                      "  method: 'POST',",
                      "  header: 'uuid:' + uuid,",
                      "};",
                      "var user_email = pm.environment.get(\"user_email\");",
                      "var user_password = pm.environment.get(\"user_password\");",
                      "const register = {",
                      "  url: 'https://' + host + '/mobile/v1.2/auth/register',",
                      "  method: 'POST',",
                      "  header: ['uuid: ' + uuid, 'Content-Type: application/json'],",
                      "  body: {",
                      "      mode: 'raw',",
                      "      raw: JSON.stringify({",
                      "        email: user_email,",
                      "        emailConfirmation: user_email,",
                      "        password: user_password,",
                      "        privacyPolicyConfirmed: true",
                      "      })",
                      "  }",
                      "};",
                      "send(userDevice);",
                      "",
                      "pm.sendRequest(register, function(err, res) {",
                      "    pm.environment.set('token', res.json().data.token);",
                      "//   console.log(err ? err : res.json());",
                      "  ",
                      "    const verifyEmail = {",
                      "      url: 'https://' + host + '/mobile/v1/account/verify-email-confirmation?code=000000',",
                      "      method: 'POST',",
                      "      header: ['uuid: ' + uuid, 'Content-Type: application/json', 'authorization: Bearer ' + pm.environment.get('token')],",
                      "    };",
                      "    send(verifyEmail);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "88ef07ae-d2bc-48e7-b780-6b9709b72335",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['token', 'expireAt'],",
                      "    properties: {",
                      "        expireAt: {",
                      "            type: 'number'",
                      "        },",
                      "        token: {",
                      "            type: 'string'",
                      "        }",
                      "    } ",
                      "}",
                      "",
                      "pm.test('validate response', function() {",
                      "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                      "});",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.set(\"token\", jsonData.data.token);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "uuid",
                    "value": "{{uuid}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1.2/auth/login",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    "v1.2",
                    "auth",
                    "login"
                  ]
                },
                "description": "Authorize user"
              },
              "response": []
            },
            {
              "name": "Request to recover password",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "031613e1-a458-4ed0-9c88-c9055f97bbb1",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "beb99fae-6b3f-4df4-b694-fe04e2ce5c98",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "pm.test(\"Status code is 202\", function () {",
                      "    pm.response.to.have.status(202);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"email\": \"{{user_email}}\"\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/auth/password/remind",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    "v2",
                    "auth",
                    "password",
                    "remind"
                  ]
                },
                "description": "Request to recover password"
              },
              "response": []
            },
            {
              "name": "Verify password reset required 2FA",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e7f5b702-7c3b-4404-ad57-18ec250334cd",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "1f6898e4-081d-47c0-802d-659bb16eb953",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['accessToken'],",
                      "    properties: {",
                      "        accessToken: {",
                      "            type: 'string'",
                      "        }",
                      "    } ",
                      "}",
                      "",
                      "pm.test('validate response', function() {",
                      "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                      "});",
                      "",
                      "pm.test(\"Status code is 202\", function () {",
                      "    pm.response.to.have.status(202);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"email\": \"{{user_email}}\",\n\t\"code\": \"{{qa_two_factor_code}}\",\n\t\"code_2fa\": \"{{qa_two_factor_code}}\"\n\t\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/auth/password/verify-reset",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    "v2",
                    "auth",
                    "password",
                    "verify-reset"
                  ]
                },
                "description": "Request to recover password"
              },
              "response": []
            },
            {
              "name": "Verify password reset with 2FA code",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "26227c81-05b9-471d-90e4-46859401266b",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "11896338-e404-4f07-ae7b-c7ee0835d9ec",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['accessToken'],",
                      "    properties: {",
                      "        accessToken: {",
                      "            type: 'string'",
                      "        }",
                      "    } ",
                      "}",
                      "",
                      "pm.test('validate response', function() {",
                      "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                      "});",
                      "",
                      "pm.test(\"Status code is 202\", function () {",
                      "    pm.response.to.have.status(202);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"email\": \"{{user_email}}\",\n\t\"code\": \"{{qa_two_factor_code}}\"\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/auth/password/verify-reset",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    "v2",
                    "auth",
                    "password",
                    "verify-reset"
                  ]
                },
                "description": "Request to recover password"
              },
              "response": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "57af7f75-71cb-4a5c-a2ce-7a0c5f97f44b",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "29aad22f-d69a-492c-b079-0460ca9f4e22",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Wallet",
      "item": [
        {
          "name": "List of transactions",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "809aada8-bf00-4348-8df1-c8d5f65dab10",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1474e6ee-a5d9-4d3c-a7c2-d3c9929f7fed",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Should return list of transactions\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.transactions.items).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "{{agent}}",
                "type": "text",
                "disabled": true
              },
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/wallet/transactions",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "wallet",
                "transactions"
              ]
            },
            "description": "Authorize user"
          },
          "response": []
        },
        {
          "name": "Send",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "509ed0dd-7fc5-4517-afaf-1d14c39775d5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "fd50ef04-38e4-407e-8fa9-79217351e38a",
                "exec": [
                  "// var jsonData = pm.response.json();",
                  "// pm.test(\"Status code is 200\", function () {",
                  "//     pm.response.to.have.status(200);",
                  "// });",
                  "",
                  "// pm.test(\"Should return list of transactions\", function () {",
                  "//     pm.expect(jsonData.data.transactions.items).to.be.an('array');",
                  "// });"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"cryptoAddress\": \"mjgFiHDP9zhoLrQoYD9q8mWCP8sxkTAasB\",\n    \"cryptoCurrencyId\": \"1\",\n    \"cryptoAmount\": \"1\",\n    \"uuid\": \"{{uuid}}\",\n    \"label\": \"Just\",\n    \"message\": \"send some\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/wallet/send",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "wallet",
                "send"
              ]
            },
            "description": "Authorize user"
          },
          "response": []
        },
        {
          "name": "List of wallets",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "b845022b-1148-4ff4-b864-687f1b05dda4",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d603bb2a-1bd6-4bfb-ae0c-ad0ad3f35a43",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Should return list of wallets\", function () {",
                  "    pm.expect(jsonData.data.wallets.items).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"Meta should contain at least one address\", function () {",
                  "    pm.expect(jsonData.data.wallets.meta.count).to.be.equal(1);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/wallet/wallets",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "wallet",
                "wallets"
              ]
            },
            "description": "Authorize user"
          },
          "response": []
        },
        {
          "name": "Fees v1.1",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "e65fe7ce-4bc3-4d0a-8b25-6806ddccb864",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "fcf66a8c-1fe2-4fe7-b73b-b5ef0f4865c9",
                "exec": [
                  "// var feeData = {",
                  "//     type: 'object',",
                  "//     required: ['networkFee', 'actualAmount', 'finalAmount', 'currencyCode'],",
                  "//     properties: {",
                  "//         networkFee: {",
                  "//             type: ['string', 'number']",
                  "//         },",
                  "//         actualAmount: {",
                  "//             type: ['string', 'number']",
                  "//         },",
                  "//         finalAmount: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         currencyCode: {",
                  "//             type: 'string'",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "// var dataShema = {",
                  "//     type: 'object',",
                  "//     required: ['cryptoCurrency', 'fiatCurrency', 'isAdjusted', 'address'],",
                  "//     properties: {",
                  "//         cryptoCurrency: feeData,",
                  "//         fiatCurrency: feeData,",
                  "//         isAdjusted: {",
                  "//             type: 'boolean',",
                  "//         },",
                  "//         address: {",
                  "//             type: 'string',",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "// var jsonData = pm.response.json();",
                  "// pm.test(\"Status code is 200\", function () {",
                  "//     pm.response.to.have.status(200);",
                  "// });",
                  "",
                  "// pm.test('validate response', function() {",
                  "//   pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                  "// });"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"crypto_address\":\"mfaENRUdWBda87iMYinSkNU4yuqhnoG8Ny\",\n\t\"amount\": \"10\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1.1/wallet/fees",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1.1",
                "wallet",
                "fees"
              ],
              "query": [
                {
                  "key": "fiat_currency_code",
                  "value": "USD",
                  "disabled": true
                }
              ]
            },
            "description": "Authorize user"
          },
          "response": []
        },
        {
          "name": "Validate address",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "6f18cc2a-39c9-4bfd-9193-5779d47eff0a",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "5d21d1a5-c4bd-44d4-a83b-38a29ca04b81",
                "exec": [
                  "var dataShema = {",
                  "    type: 'object',",
                  "    required: ['valid'],",
                  "    properties: {",
                  "        valid: {",
                  "            type: 'boolean',",
                  "        }",
                  "    }",
                  "}",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"crypto_address\":\"mfaENRUdWBda87iMYinSkNU4yuqhnoG8Ny\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/wallet/address/validate",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "wallet",
                "address",
                "validate"
              ],
              "query": [
                {
                  "key": "uuid",
                  "value": "{{uuid}}",
                  "disabled": true
                },
                {
                  "key": "Content-type",
                  "value": null,
                  "disabled": true
                }
              ]
            },
            "description": "Authorize user"
          },
          "response": []
        },
        {
          "name": "Calculate amount",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "86d77f66-33ab-45c6-ab1e-c4d984812b8a",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "84e0d50f-349c-44e3-84b7-7301e5e0edda",
                "exec": [
                  "var feeData = {",
                  "    type: 'object',",
                  "    required: ['actualAmount', 'currencyCode'],",
                  "    properties: {",
                  "        actualAmount: {",
                  "            type: ['number', 'string']",
                  "        },",
                  "        currencyCode: {",
                  "            type: 'string'",
                  "        }",
                  "    }",
                  "}",
                  "",
                  "var dataShema = {",
                  "    type: 'object',",
                  "    required: ['cryptoCurrency', 'fiatCurrency'],",
                  "    properties: {",
                  "        cryptoCurrency: feeData,",
                  "        fiatCurrency: feeData,",
                  "    }",
                  "}",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"crypto_address\":\"mfaENRUdWBda87iMYinSkNU4yuqhnoG8Ny\",\n\t\"amount\": \"19\",\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/wallet/calculate-amount?amount=100&crypto_address=mjgFiHDP9zhoLrQoYD9q8mWCP8sxkTAasB&fiat_currency_code=USD",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "wallet",
                "calculate-amount"
              ],
              "query": [
                {
                  "key": "amount",
                  "value": "100"
                },
                {
                  "key": "crypto_address",
                  "value": "mjgFiHDP9zhoLrQoYD9q8mWCP8sxkTAasB"
                },
                {
                  "key": "fiat_currency_code",
                  "value": "USD"
                }
              ]
            },
            "description": "Authorize user"
          },
          "response": []
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Taxonomy",
      "item": [
        {
          "name": "All Taxonomies",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "40dbc1e0-af1f-4ebc-b12e-9b9b5d08767a",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "8e409b3c-2c94-493b-83d2-734bec75f179",
                "exec": [
                  "// var jsonData = pm.response.json();",
                  "// var countryObjectSchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name', 'iso', 'iso3'],",
                  "//      properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         iso: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         iso3: {",
                  "//             type: 'string'",
                  "//         },",
                  "//      }",
                  "// }",
                  "",
                  "// var countriesSchema = {",
                  "//     type: 'object',",
                  "//     required: ['hash', 'items'],",
                  "//     properties: {",
                  "//         hash: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         items: {",
                  "//             type: 'array',",
                  "//             contains: countryObjectSchema",
                  "//         }",
                  "//      }",
                  "// }",
                  "",
                  "// var languagesSchema = {",
                  "//     type: 'object',",
                  "//     required: ['hash', 'items'],",
                  "//     properties: {",
                  "//         hash: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         items: {",
                  "//             type: 'object'",
                  "//         }",
                  "//      }",
                  "// }",
                  "",
                  "// var tradeStatusSchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name'],",
                  "//      properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         }",
                  "//      }",
                  "// }",
                  "",
                  "// var tradeStatusesSchema = {",
                  "//     type: 'object',",
                  "//     required: ['hash', 'items'],",
                  "//     properties: {",
                  "//         hash: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         items: {",
                  "//             type: 'array',",
                  "//             contains: tradeStatusSchema",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "// var cryptoCurrencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name', 'code'],",
                  "//     properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         code: {",
                  "//             type: 'string'",
                  "//         },",
                  "//     }",
                  "// }",
                  "// var fiatCurrencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name', 'code'],",
                  "//     properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         code: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         defaultAmount: {",
                  "//             type: 'number'",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "// var currencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['fiat', 'crypto'],",
                  "//     properties: {",
                  "//         fiat: {",
                  "//             type: 'object',",
                  "//             required: ['hash', 'items'],",
                  "//             properties: {",
                  "//                 hash: {",
                  "//                     type: 'string'",
                  "//                 },",
                  "//                 items: {",
                  "//                     type: 'array',",
                  "//                     contains: fiatCurrencySchema",
                  "//                 }",
                  "//             }",
                  "//         },",
                  "//         crypto: {",
                  "//             type: 'object',",
                  "//             required: ['hash', 'items'],",
                  "//             properties: {",
                  "//                 hash: {",
                  "//                     type: 'string'",
                  "//                 },",
                  "//                 items: {",
                  "//                     type: 'array',",
                  "//                     contains: cryptoCurrencySchema",
                  "//                 }",
                  "//             }",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "// var dataShema = {",
                  "//     type: 'object',",
                  "//     required: ['countries', 'languages', 'translations', 'tradeStatuses', 'currency'],",
                  "//     properties: {",
                  "//         countries: countriesSchema,",
                  "//         languages: languagesSchema,",
                  "//         tradeStatuses: tradeStatusesSchema,",
                  "//         currency: currencySchema",
                  "//     } ",
                  "// }",
                  "",
                  "// pm.test('validate response', function() {",
                  "//   pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                  "// });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    // pm.environment.set(\"web_token\", jsonData.data.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "lang",
                "value": "en",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/taxonomies",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v2",
                "taxonomies"
              ]
            },
            "description": "List of taxonomies"
          },
          "response": []
        },
        {
          "name": "Countries",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a6023399-362b-4d3b-a343-8269a9387a39",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "cbc63136-342f-4048-8a91-bf990fea47a6",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var metaSchema = {",
                  "    type: 'object',",
                  "    required: ['count', 'offset', 'limit'],",
                  "     properties: {",
                  "        count: {",
                  "            type: 'number'",
                  "        },",
                  "        offset: {",
                  "            type: 'null'",
                  "        },",
                  "        limit: {",
                  "            type: 'null'",
                  "        },",
                  "     }",
                  "}",
                  "var countryObjectSchema = {",
                  "    type: 'object',",
                  "    required: ['id', 'name', 'iso', 'iso3'],",
                  "     properties: {",
                  "        id: {",
                  "            type: 'number'",
                  "        },",
                  "        name: {",
                  "            type: 'string'",
                  "        },",
                  "        iso: {",
                  "            type: 'string'",
                  "        },",
                  "        iso3: {",
                  "            type: 'string'",
                  "        },",
                  "     }",
                  "}",
                  "",
                  "// var countriesSchema = {",
                  "//     type: 'object',",
                  "//     required: ['hash', 'items'],",
                  "//     properties: {",
                  "//         hash: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         items: {",
                  "//             type: 'array',",
                  "//             contains: countryObjectSchema",
                  "//         }",
                  "//      }",
                  "// }",
                  "",
                  "// var languagesSchema = {",
                  "//     type: 'object',",
                  "//     required: ['hash', 'items'],",
                  "//     properties: {",
                  "//         hash: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         items: {",
                  "//             type: 'object'",
                  "//         }",
                  "//      }",
                  "// }",
                  "",
                  "// // var tradeStatusSchema = {",
                  "// //     type: 'object',",
                  "// //     required: ['id', 'name'],",
                  "// //      properties: {",
                  "// //         id: {",
                  "// //             type: 'number'",
                  "// //         },",
                  "// //         name: {",
                  "// //             type: 'string'",
                  "// //         }",
                  "// //      }",
                  "// // }",
                  "",
                  "// // var tradeStatusesSchema = {",
                  "// //     type: 'object',",
                  "// //     required: ['hash', 'items'],",
                  "// //     properties: {",
                  "// //         hash: {",
                  "// //             type: 'string'",
                  "// //         },",
                  "// //         items: {",
                  "// //             type: 'array',",
                  "// //             contains: tradeStatusSchema",
                  "// //         }",
                  "// //     }",
                  "// // }",
                  "",
                  "// var cryptoCurrencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name', 'code'],",
                  "//     properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         code: {",
                  "//             type: 'string'",
                  "//         },",
                  "//     }",
                  "// }",
                  "// var fiatCurrencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name', 'code'],",
                  "//     properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         code: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         defaultAmount: {",
                  "//             type: 'number'",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "// var currencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['fiat', 'crypto'],",
                  "//     properties: {",
                  "//         fiat: {",
                  "//             type: 'object',",
                  "//             required: ['hash', 'items'],",
                  "//             properties: {",
                  "//                 hash: {",
                  "//                     type: 'string'",
                  "//                 },",
                  "//                 items: {",
                  "//                     type: 'array',",
                  "//                     contains: fiatCurrencySchema",
                  "//                 }",
                  "//             }",
                  "//         },",
                  "//         crypto: {",
                  "//             type: 'object',",
                  "//             required: ['hash', 'items'],",
                  "//             properties: {",
                  "//                 hash: {",
                  "//                     type: 'string'",
                  "//                 },",
                  "//                 items: {",
                  "//                     type: 'array',",
                  "//                     contains: cryptoCurrencySchema",
                  "//                 }",
                  "//             }",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "var dataShema = {",
                  "    type: 'object',",
                  "    required: ['meta','items'],",
                  "    properties: {",
                  "        meta: metaSchema,",
                  "        countries: countryObjectSchema,",
                  "",
                  "    } ",
                  "}",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.environment.set(\"web_token\", jsonData.data.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/taxonomies/countries",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v2",
                "taxonomies",
                "countries"
              ]
            },
            "description": "List of taxonomies"
          },
          "response": []
        },
        {
          "name": "Fiat Currencies",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "8c5d51c1-7611-4ab2-88a5-ed6a49051f7f",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "55a6697e-862c-4198-90ad-ae7b38150124",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var metaSchema = {",
                  "    type: 'object',",
                  "    required: ['count', 'offset', 'limit'],",
                  "     properties: {",
                  "        count: {",
                  "            type: 'number'",
                  "        },",
                  "        offset: {",
                  "            type: 'null'",
                  "        },",
                  "        limit: {",
                  "            type: 'null'",
                  "        },",
                  "     }",
                  "}",
                  "var countryObjectSchema = {",
                  "    type: 'object',",
                  "    required: ['id', 'name', 'iso', 'iso3'],",
                  "     properties: {",
                  "        id: {",
                  "            type: 'number'",
                  "        },",
                  "        name: {",
                  "            type: 'string'",
                  "        },",
                  "        iso: {",
                  "            type: 'string'",
                  "        },",
                  "        iso3: {",
                  "            type: 'string'",
                  "        },",
                  "     }",
                  "}",
                  "",
                  "// var countriesSchema = {",
                  "//     type: 'object',",
                  "//     required: ['hash', 'items'],",
                  "//     properties: {",
                  "//         hash: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         items: {",
                  "//             type: 'array',",
                  "//             contains: countryObjectSchema",
                  "//         }",
                  "//      }",
                  "// }",
                  "",
                  "// var languagesSchema = {",
                  "//     type: 'object',",
                  "//     required: ['hash', 'items'],",
                  "//     properties: {",
                  "//         hash: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         items: {",
                  "//             type: 'object'",
                  "//         }",
                  "//      }",
                  "// }",
                  "",
                  "// // var tradeStatusSchema = {",
                  "// //     type: 'object',",
                  "// //     required: ['id', 'name'],",
                  "// //      properties: {",
                  "// //         id: {",
                  "// //             type: 'number'",
                  "// //         },",
                  "// //         name: {",
                  "// //             type: 'string'",
                  "// //         }",
                  "// //      }",
                  "// // }",
                  "",
                  "// // var tradeStatusesSchema = {",
                  "// //     type: 'object',",
                  "// //     required: ['hash', 'items'],",
                  "// //     properties: {",
                  "// //         hash: {",
                  "// //             type: 'string'",
                  "// //         },",
                  "// //         items: {",
                  "// //             type: 'array',",
                  "// //             contains: tradeStatusSchema",
                  "// //         }",
                  "// //     }",
                  "// // }",
                  "",
                  "// var cryptoCurrencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name', 'code'],",
                  "//     properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         code: {",
                  "//             type: 'string'",
                  "//         },",
                  "//     }",
                  "// }",
                  "// var fiatCurrencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name', 'code'],",
                  "//     properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         code: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         defaultAmount: {",
                  "//             type: 'number'",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "// var currencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['fiat', 'crypto'],",
                  "//     properties: {",
                  "//         fiat: {",
                  "//             type: 'object',",
                  "//             required: ['hash', 'items'],",
                  "//             properties: {",
                  "//                 hash: {",
                  "//                     type: 'string'",
                  "//                 },",
                  "//                 items: {",
                  "//                     type: 'array',",
                  "//                     contains: fiatCurrencySchema",
                  "//                 }",
                  "//             }",
                  "//         },",
                  "//         crypto: {",
                  "//             type: 'object',",
                  "//             required: ['hash', 'items'],",
                  "//             properties: {",
                  "//                 hash: {",
                  "//                     type: 'string'",
                  "//                 },",
                  "//                 items: {",
                  "//                     type: 'array',",
                  "//                     contains: cryptoCurrencySchema",
                  "//                 }",
                  "//             }",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "var dataShema = {",
                  "    type: 'object',",
                  "    required: ['meta','items'],",
                  "    properties: {",
                  "        meta: metaSchema,",
                  "        countries: countryObjectSchema,",
                  "",
                  "    } ",
                  "}",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.environment.set(\"web_token\", jsonData.data.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/taxonomies/fiat-currencies",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v2",
                "taxonomies",
                "fiat-currencies"
              ]
            },
            "description": "List of taxonomies"
          },
          "response": []
        },
        {
          "name": "Trade Statuses",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "4280d07b-2d11-4057-9cb8-d3cbc1efad90",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4258f8c5-fcc2-47f0-b7f8-44f56c76f176",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var metaSchema = {",
                  "    type: 'object',",
                  "    required: ['count', 'offset', 'limit'],",
                  "     properties: {",
                  "        count: {",
                  "            type: 'number'",
                  "        },",
                  "        offset: {",
                  "            type: 'null'",
                  "        },",
                  "        limit: {",
                  "            type: 'null'",
                  "        },",
                  "     }",
                  "}",
                  "var countryObjectSchema = {",
                  "    type: 'object',",
                  "    required: ['id', 'name', 'iso', 'iso3'],",
                  "     properties: {",
                  "        id: {",
                  "            type: 'number'",
                  "        },",
                  "        name: {",
                  "            type: 'string'",
                  "        },",
                  "        iso: {",
                  "            type: 'string'",
                  "        },",
                  "        iso3: {",
                  "            type: 'string'",
                  "        },",
                  "     }",
                  "}",
                  "",
                  "// var countriesSchema = {",
                  "//     type: 'object',",
                  "//     required: ['hash', 'items'],",
                  "//     properties: {",
                  "//         hash: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         items: {",
                  "//             type: 'array',",
                  "//             contains: countryObjectSchema",
                  "//         }",
                  "//      }",
                  "// }",
                  "",
                  "// var languagesSchema = {",
                  "//     type: 'object',",
                  "//     required: ['hash', 'items'],",
                  "//     properties: {",
                  "//         hash: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         items: {",
                  "//             type: 'object'",
                  "//         }",
                  "//      }",
                  "// }",
                  "",
                  "// // var tradeStatusSchema = {",
                  "// //     type: 'object',",
                  "// //     required: ['id', 'name'],",
                  "// //      properties: {",
                  "// //         id: {",
                  "// //             type: 'number'",
                  "// //         },",
                  "// //         name: {",
                  "// //             type: 'string'",
                  "// //         }",
                  "// //      }",
                  "// // }",
                  "",
                  "// // var tradeStatusesSchema = {",
                  "// //     type: 'object',",
                  "// //     required: ['hash', 'items'],",
                  "// //     properties: {",
                  "// //         hash: {",
                  "// //             type: 'string'",
                  "// //         },",
                  "// //         items: {",
                  "// //             type: 'array',",
                  "// //             contains: tradeStatusSchema",
                  "// //         }",
                  "// //     }",
                  "// // }",
                  "",
                  "// var cryptoCurrencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name', 'code'],",
                  "//     properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         code: {",
                  "//             type: 'string'",
                  "//         },",
                  "//     }",
                  "// }",
                  "// var fiatCurrencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name', 'code'],",
                  "//     properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         code: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         defaultAmount: {",
                  "//             type: 'number'",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "// var currencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['fiat', 'crypto'],",
                  "//     properties: {",
                  "//         fiat: {",
                  "//             type: 'object',",
                  "//             required: ['hash', 'items'],",
                  "//             properties: {",
                  "//                 hash: {",
                  "//                     type: 'string'",
                  "//                 },",
                  "//                 items: {",
                  "//                     type: 'array',",
                  "//                     contains: fiatCurrencySchema",
                  "//                 }",
                  "//             }",
                  "//         },",
                  "//         crypto: {",
                  "//             type: 'object',",
                  "//             required: ['hash', 'items'],",
                  "//             properties: {",
                  "//                 hash: {",
                  "//                     type: 'string'",
                  "//                 },",
                  "//                 items: {",
                  "//                     type: 'array',",
                  "//                     contains: cryptoCurrencySchema",
                  "//                 }",
                  "//             }",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "var dataShema = {",
                  "    type: 'object',",
                  "    required: ['meta','items'],",
                  "    properties: {",
                  "        meta: metaSchema,",
                  "        countries: countryObjectSchema,",
                  "",
                  "    } ",
                  "}",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.environment.set(\"web_token\", jsonData.data.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/taxonomies/trade-statuses",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v2",
                "taxonomies",
                "trade-statuses"
              ]
            },
            "description": "List of taxonomies"
          },
          "response": []
        },
        {
          "name": "Version",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "17b1020e-6008-4911-8119-dcb5d07a010f",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var version = {",
                  "    required: ['countries', 'languages', 'translations', 'tradeStatuses'],",
                  "     properties: {",
                  "        countries: {",
                  "            type: 'string'",
                  "        },",
                  "        languages: {",
                  "            type: 'string'",
                  "        },",
                  "        translations: {",
                  "            type: 'string'",
                  "        },",
                  "        tradeStatuses: {",
                  "            type: 'string'",
                  "        },",
                  "        properties: {",
                  "            currency:{",
                  "                type: 'string'",
                  "            },",
                  "            crypto: {",
                  "                type: 'string'",
                  "            }",
                  "     }",
                  "}",
                  "",
                  "// var countriesSchema = {",
                  "//     type: 'object',",
                  "//     required: ['hash', 'items'],",
                  "//     properties: {",
                  "//         hash: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         items: {",
                  "//             type: 'array',",
                  "//             contains: countryObjectSchema",
                  "//         }",
                  "//      }",
                  "// }",
                  "",
                  "// var languagesSchema = {",
                  "//     type: 'object',",
                  "//     required: ['hash', 'items'],",
                  "//     properties: {",
                  "//         hash: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         items: {",
                  "//             type: 'object'",
                  "//         }",
                  "//      }",
                  "// }",
                  "",
                  "// var tradeStatusSchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name'],",
                  "//      properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         }",
                  "//      }",
                  "// }",
                  "",
                  "// var tradeStatusesSchema = {",
                  "//     type: 'object',",
                  "//     required: ['hash', 'items'],",
                  "//     properties: {",
                  "//         hash: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         items: {",
                  "//             type: 'array',",
                  "//             contains: tradeStatusSchema",
                  "//         }",
                  "//     }",
                  "}",
                  "",
                  "// var cryptoCurrencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name', 'code'],",
                  "//     properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         code: {",
                  "//             type: 'string'",
                  "//         },",
                  "//     }",
                  "// }",
                  "// var fiatCurrencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['id', 'name', 'code'],",
                  "//     properties: {",
                  "//         id: {",
                  "//             type: 'number'",
                  "//         },",
                  "//         name: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         code: {",
                  "//             type: 'string'",
                  "//         },",
                  "//         defaultAmount: {",
                  "//             type: 'number'",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "// var currencySchema = {",
                  "//     type: 'object',",
                  "//     required: ['fiat', 'crypto'],",
                  "//     properties: {",
                  "//         fiat: {",
                  "//             type: 'object',",
                  "//             required: ['hash', 'items'],",
                  "//             properties: {",
                  "//                 hash: {",
                  "//                     type: 'string'",
                  "//                 },",
                  "//                 items: {",
                  "//                     type: 'array',",
                  "//                     contains: fiatCurrencySchema",
                  "//                 }",
                  "//             }",
                  "//         },",
                  "//         crypto: {",
                  "//             type: 'object',",
                  "//             required: ['hash', 'items'],",
                  "//             properties: {",
                  "//                 hash: {",
                  "//                     type: 'string'",
                  "//                 },",
                  "//                 items: {",
                  "//                     type: 'array',",
                  "//                     contains: cryptoCurrencySchema",
                  "//                 }",
                  "//             }",
                  "//         }",
                  "//     }",
                  "// }",
                  "",
                  "// var dataShema = {",
                  "//     type: 'object',",
                  "//     required: ['countries', 'languages', 'translations', 'tradeStatuses', 'currency'],",
                  "//     properties: {",
                  "//         countries: countriesSchema,",
                  "//         languages: languagesSchema,",
                  "//         tradeStatuses: tradeStatusesSchema,",
                  "//         currency: currencySchema",
                  "//     } ",
                  "// }",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(version);",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.environment.set(\"web_token\", jsonData.data.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d788d988-a6e9-4f6e-9994-822143759735",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/taxonomies/version",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v2",
                "taxonomies",
                "version"
              ]
            },
            "description": "List of taxonomies"
          },
          "response": []
        },
        {
          "name": "Timezones",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "11ba6f2b-4aee-4eff-8408-53dae10679eb",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4cf5684b-ae5a-4b35-9fde-9b4c675d3d3e",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "const customerSchema = {",
                  "  \"required\": [\"meta\", \"items\"],",
                  "  \"properties\": {",
                  "    \"meta\": {",
                  "      \"count\": \"number\",",
                  "      \"offset\": null,",
                  "      \"limit\": null",
                  "    },",
                  "    \"items\": {",
                  "      \"type\": \"object\",",
                  "    }",
                  "  }",
                  "};",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(customerSchema);",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/taxonomies/timezones",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v2",
                "taxonomies",
                "timezones"
              ]
            },
            "description": "List of taxonomies"
          },
          "response": []
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Security",
      "item": [
        {
          "name": "v1.0",
          "item": [
            {
              "name": "Set security questions",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1496e78-836f-47e4-bc91-ca4b8ce2e774",
                    "exec": [
                      "pm.test(\"Status code is 202\", function() {",
                      "    pm.response.to.have.status(202);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"question1\": {\n        \"id\": 13,\n        \"answer\": \"123\"\n    },\n    \"question2\": {\n        \"id\":22,\n        \"answer\": \"ABC\"\n    }\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:subcategory/:request",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    ":version",
                    ":category",
                    ":subcategory",
                    ":request"
                  ],
                  "variable": [
                    {
                      "key": "version",
                      "value": "v1"
                    },
                    {
                      "key": "category",
                      "value": "account"
                    },
                    {
                      "key": "subcategory",
                      "value": "settings"
                    },
                    {
                      "key": "request",
                      "value": "set-security-questions"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "v2.0",
          "item": [
            {
              "name": "Security questions",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "c3bcce61-8c42-4940-b978-687d218a2273",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "b5a5facd-0009-4c57-b804-627c1b6f5587",
                    "exec": [
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Should return list of security questions\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.data.questions.meta.count).to.be.eql(3);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/security/questions",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    "v2",
                    "security",
                    "questions"
                  ]
                },
                "description": "Authorize user"
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Account",
      "item": [
        {
          "name": "Two-Factor",
          "item": [
            {
              "name": "Phone",
              "item": [
                {
                  "name": "Send phone number confirmation",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1d6807f5-481d-48ce-91c5-ee3fd20ea5b9",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "",
                          "// if (jsonData.status === \"true\") {",
                          "//     postman.setNextRequest(null);",
                          "// } else {",
                          "//     postman.setNextRequest('Send phone number confirmation');",
                          "// }",
                          "pm.test(\"Request status true\", function() {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.status === \"true\");",
                          "});",
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "5fafa227-1aa1-43b9-8c92-5fdf1c710c19",
                        "exec": [
                          "var host = pm.environment.get(\"host\");",
                          "const userDevice = {",
                          "  url: 'https://' + host + \"/helper-qa/get-user-info?email=\" + pm.environment.get(\"user_email\"),",
                          "  method: 'GET',",
                          "};",
                          "pm.sendRequest(userDevice, function(err, res) {",
                          "    var id =  res.json().data.user_id;",
                          "    var phoneNumber = pm.environment.get(\"phoneNumber\");",
                          "    // console.log(id, phoneNumber);",
                          "    const disablePhone = {",
                          "        url: 'https://' + host + \"/helper-qa/toggle-phone-verification?phone=\" + phoneNumber + \"&value=0&user_id=\" + id,",
                          "        method: 'GET',",
                          "    };",
                          "    pm.sendRequest(disablePhone, function(err, res) {",
                          "        // pm.environment.set('token', res.json().data.user_id);",
                          "        var status =  res.json();",
                          "    });",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"phoneNumber\": \"+37256664850\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "request",
                          "value": "send-phone-number-confirmation"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Verify phone number confirmation",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0c77f8e2-e916-4bab-8fba-ebcc7f4a8bfd",
                        "exec": [
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test(\"Request status true\", function() {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.status === \"true\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"code\": \"{{qa_two_factor_code}}\",\n    \"phoneNumber\": \"{{phoneNumber}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "request",
                          "value": "verify-phone-number-confirmation"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Login",
              "item": [
                {
                  "name": "Set SMS two-factor for login",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e1bd97db-c355-4c62-b086-0ff49263e92c",
                        "exec": [
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test(\"Message, method and type are correct\", function() {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.data.message).to.eql(\"mobile-app.account.2fa_is_updated\");",
                          "    pm.expect(jsonData.data.method).to.eql(\"sms\");",
                          "    pm.expect(jsonData.data.type).to.eql(\"loginTwoFactor\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"code\": \"{{qa_two_factor_code}}\",\n    \"method\": \"sms\",\n    \"type\": \"login\"\n}"
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "request",
                          "value": "two-factor"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Remove two-factor for login",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b9d265a8-f002-40e3-a9aa-015797cbb481",
                        "exec": [
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test(\"Message, method and type are correct\", function() {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.data.message).to.eql(\"mobile-app.account.2fa_is_updated\");",
                          "    pm.expect(jsonData.data.method).to.eql(null);",
                          "    pm.expect(jsonData.data.type).to.eql(\"loginTwoFactor\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"code\": \"{{qa_two_factor_code}}\",\n\t\"method\": \"none\",\n\t\"type\": \"login\"\n}"
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "request",
                          "value": "two-factor"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Set GA two-factor for login",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f3558656-188d-4016-8114-eb817e243a41",
                        "exec": [
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test(\"Message, method and type are correct\", function() {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.data.message).to.eql(\"mobile-app.account.2fa_is_updated\");",
                          "    pm.expect(jsonData.data.method).to.eql(\"ga\");",
                          "    pm.expect(jsonData.data.type).to.eql(\"loginTwoFactor\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"code\": \"{{qa_two_factor_code}}\",\n    \"method\": \"ga\",\n    \"type\": \"login\",\n    \"gaSecret\": \"{{qa_two_factor_code}}\"\n}"
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "request",
                          "value": "two-factor"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Transactions",
              "item": [
                {
                  "name": "Set SMS two-factor for transactions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a5f8a0ed-0e68-420d-96b3-731754fce5a2",
                        "exec": [
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test(\"Message, method and type are correct\", function() {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.data.message).to.eql(\"mobile-app.account.2fa_is_updated\");",
                          "    pm.expect(jsonData.data.method).to.eql(\"sms\");",
                          "    pm.expect(jsonData.data.type).to.eql(\"sendOutTwoFactor\");",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"code\": \"{{qa_two_factor_code}}\",\n    \"method\": \"sms\",\n    \"type\": \"withdrawal\"\n}"
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "request",
                          "value": "two-factor"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Remove two-factor for transactions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6b24854a-29dd-490c-8927-5e53eb47eaa2",
                        "exec": [
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test(\"Message, method and type are correct\", function() {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.data.message).to.eql(\"mobile-app.account.2fa_is_updated\");",
                          "    pm.expect(jsonData.data.method).to.eql(null);",
                          "    pm.expect(jsonData.data.type).to.eql(\"sendOutTwoFactor\");",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"code\": \"{{qa_two_factor_code}}\",\n\t\"method\": \"none\",\n\t\"type\": \"withdrawal\"\n}"
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "request",
                          "value": "two-factor"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Set GA two-factor for transactions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ffbb309b-23d0-4d64-8dfa-ec56e2302191",
                        "exec": [
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test(\"Message, method and type are correct\", function() {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.data.message).to.eql(\"mobile-app.account.2fa_is_updated\");",
                          "    pm.expect(jsonData.data.method).to.eql(\"ga\");",
                          "    pm.expect(jsonData.data.type).to.eql(\"sendOutTwoFactor\");",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"code\": \"{{qa_two_factor_code}}\",\n    \"method\": \"ga\",\n    \"type\": \"withdrawal\",\n    \"gaSecret\": \"{{qa_two_factor_code}}\"\n\n}"
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "request",
                          "value": "two-factor"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Verification (KYC)",
              "item": [
                {
                  "name": "Get verification status",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "0a0324f8-d8c4-4dba-960a-0672f88ccd4e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "9c4e3d6e-b72e-40aa-99ac-eb98175ef983",
                        "exec": [
                          "var jsonData = pm.response.json().data;",
                          "const schema = {",
                          "  \"required\": [\"data\", \"idVerification\", \"documentVerification\", \"jumioCredentials\"],",
                          "  \"properties\": {",
                          "    \"data\": {",
                          "      \"idVerification\": \"object\",",
                          "      \"documentVerification\": \"object\",",
                          "      \"jumioCredentials\": \"object\",",
                          "    },",
                          "    \"idVerification\": {",
                          "      \"status\": \"boolean\",",
                          "    },",
                          "    \"documentVerification\": {",
                          "      \"status\": \"boolean\",",
                          "    },",
                          "    \"jumioCredentials\": {",
                          "      \"token\": \"string\",",
                          "      \"secret\": \"string\",",
                          "    }",
                          "  }",
                          "};",
                          "",
                          "pm.test('validate response', function() {",
                          "  pm.expect(jsonData.data).to.be.jsonSchema(schema);",
                          "});",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Should return list of verification statuses\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.data.idVerification.status).to.be.eql(5);",
                          "    pm.expect(jsonData.data.documentVerification.status).to.be.eql(null);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:subcategory/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":subcategory",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "subcategory",
                          "value": "verification"
                        },
                        {
                          "key": "request",
                          "value": "status"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get verification data",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "75ec6fa9-5030-4fa6-b63a-8175325a84dd",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "97b60c2a-e656-47d2-a085-124100cbaf2d",
                        "exec": [
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Should return list of verification data\", function () {",
                          "    // var jsonData = pm.response.json();",
                          "    // pm.expect(jsonData.data.countries).to.be.an('object');",
                          "    // pm.expect(jsonData.data.addressDocumentTypes).to.be.an('array');",
                          "    // pm.expect(jsonData.data.documentTypeNotRequiredCountries).to.be.an('array');",
                          "    // pm.expect(jsonData.data.requiredPersonalNameInformationCountries).to.be.an('array');",
                          "    // pm.expect(jsonData.data.idTypesByCountries).to.be.an('object');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:subcategory/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":subcategory",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "subcategory",
                          "value": "verification"
                        },
                        {
                          "key": "request",
                          "value": "data"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Process ID verification",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b3eb7ffc-b466-49d9-bf29-b9da58bd3205",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "89ed2eb6-a5d9-4a34-9e41-d9d14e2130e9",
                        "exec": [
                          "// var jsonData = pm.response.json().data;",
                          "// const schema = {",
                          "//   \"required\": [\"data\", \"transactionReference\"],",
                          "//   \"properties\": {",
                          "//     \"data\": {",
                          "//       \"transactionReference\": \"string\",",
                          "//     },",
                          "//   }",
                          "// };",
                          "",
                          "// pm.test('validate response', function() {",
                          "//   pm.expect(jsonData.data).to.be.jsonSchema(schema);",
                          "// });",
                          "// pm.test(\"Status code is 200\", function() {",
                          "//     pm.response.to.have.status(200);",
                          "// });",
                          "",
                          "// pm.test(\"Response is correct\", function() {",
                          "//     var jsonData = pm.response.json();",
                          "//     pm.expect(jsonData.data.transactionReference).to.be.an(\"string\");",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"date_of_birth_year\": 1990,\n  \"date_of_birth_month\": 6,\n  \"date_of_birth_day\": 12,\n  \"document_expiration_date_year\": 2020,\n  \"document_expiration_date_month\": 9,\n  \"document_expiration_date_day\": 22,\n  \"first_name\": \"Random\",\n  \"first_name_original\": \"Random\",\n  \"last_name\": \"Client\",\n  \"last_name_original\": \"Client\",\n  \"middle_name\": \"Paxful\",\n  \"middle_name_original\": \"Paxful\",\n  \"issue_country_iso3\": \"EST\",\n  \"document_type\": \"ID_CARD\",\n  \"document_number\": \"{{documentNumber}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:subcategory/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":subcategory",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "subcategory",
                          "value": "verification"
                        },
                        {
                          "key": "request",
                          "value": "id"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Udate Verification Status",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "13538e50-ef46-49fd-9b51-c60ed88fde44",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "9a36ed9d-808a-4eaa-8c57-0ea58dce4e41",
                        "exec": [
                          "// var jsonData = pm.response.json().data;",
                          "// const schema = {",
                          "//   \"required\": [\"data\", \"transactionReference\"],",
                          "//   \"properties\": {",
                          "//     \"data\": {",
                          "//       \"transactionReference\": \"string\",",
                          "//     },",
                          "//   }",
                          "// };",
                          "",
                          "// pm.test('validate response', function() {",
                          "//   pm.expect(jsonData.data).to.be.jsonSchema(schema);",
                          "// });",
                          "// pm.test(\"Status code is 200\", function() {",
                          "//     pm.response.to.have.status(200);",
                          "// });",
                          "",
                          "// pm.test(\"Response is correct\", function() {",
                          "//     var jsonData = pm.response.json();",
                          "//     pm.expect(jsonData.data.transactionReference).to.be.an(\"string\");",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"internalReference\": \"c7e6e088-e51c-11e9-9d97-08002789e437\",\n  \"scanReference\": \"8c88ab53-ad0d-4327-abca-a9e5bb21a999\"\n}"
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:subcategory/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":subcategory",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "subcategory",
                          "value": "verification"
                        },
                        {
                          "key": "request",
                          "value": "update"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Process document verification",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3639aefc-1ae9-4ad2-843d-3a98e5d0d28a",
                        "exec": [
                          "var host = pm.environment.get(\"host\");",
                          "const userId = {",
                          "  url: 'https://' + host + \"/helper-qa/get-user-info?email=\" + pm.environment.get(\"user_email\"),",
                          "  method: 'GET',",
                          "};",
                          "pm.sendRequest(userId, function(err, res) {",
                          "    var id =  res.json().data.user_id;",
                          "    // console.log(id);",
                          "    const verifyId = {",
                          "        url: 'https://' + host + \"/helper-qa/toggle-kyc-verification?user_id=\" + id + \"&id\",",
                          "        method: 'GET',",
                          "    };",
                          "    pm.sendRequest(verifyId, function(err, res) {",
                          "    //   console.log(err ? err : res.json());",
                          "    });",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5dbf9d1-4214-41eb-a771-2e9a876fff64",
                        "exec": [
                          "// var jsonData = pm.response.json().data;",
                          "// const customerSchema = {",
                          "//   \"required\": [\"data\"],",
                          "//   \"properties\": {",
                          "//     \"data\": {",
                          "//       \"scanReference\": \"string\",",
                          "//     },",
                          "//   }",
                          "// };",
                          "",
                          "// pm.test('validate response', function() {",
                          "//   pm.expect(jsonData.data).to.be.jsonSchema(customerSchema);",
                          "// });",
                          "// pm.test(\"Status code is 200\", function() {",
                          "//     pm.response.to.have.status(200);",
                          "// });",
                          "",
                          "// pm.test(\"Response is correct\", function() {",
                          "//     var jsonData = pm.response.json();",
                          "//     pm.expect(jsonData.data.scanReference).to.be.an(\"string\");",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"country_iso3\": \"EST\",\n\t\"document_type\": \"UB\",\n\t\"region_name\": \"ESTONIA\",\n\t\"city_name\": \"TALLINN\",\n\t\"address_line_1\": \"Narva mnt 7c\",\n\t\"zip_code\": \"75501\"\n}"
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:subcategory/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":subcategory",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "subcategory",
                          "value": "verification"
                        },
                        {
                          "key": "request",
                          "value": "document"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Release",
              "item": [
                {
                  "name": "Set SMS two-factor for release",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "cb84c9fe-98b8-4563-8d5d-61752f82c52f",
                        "exec": [
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test(\"Message, method and type are correct\", function() {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.data.message).to.eql(\"mobile-app.account.2fa_is_updated\");",
                          "    pm.expect(jsonData.data.method).to.eql(\"sms\");",
                          "    pm.expect(jsonData.data.type).to.eql(\"releaseCoinsTwoFactor\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"code\": \"{{qa_two_factor_code}}\",\n    \"method\": \"sms\",\n    \"type\": \"release\"\n}"
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "request",
                          "value": "two-factor"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Remove two-factor for release",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "cf5951cb-4994-4d00-8a6e-377a3db89a9b",
                        "exec": [
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test(\"Message, method and type are correct\", function() {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.data.message).to.eql(\"mobile-app.account.2fa_is_updated\");",
                          "    pm.expect(jsonData.data.method).to.eql(null);",
                          "    pm.expect(jsonData.data.type).to.eql(\"releaseCoinsTwoFactor\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"code\": \"{{qa_two_factor_code}}\",\n\t\"method\": \"none\",\n\t\"type\": \"release\"\n}"
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "request",
                          "value": "two-factor"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Set GA two-factor for release",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "37a4829d-b014-4b7d-a661-da9d0116b41b",
                        "exec": [
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test(\"Message, method and type are correct\", function() {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.data.message).to.eql(\"mobile-app.account.2fa_is_updated\");",
                          "    pm.expect(jsonData.data.method).to.eql(\"ga\");",
                          "    pm.expect(jsonData.data.type).to.eql(\"releaseCoinsTwoFactor\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "uuid",
                        "type": "text",
                        "value": "{{uuid}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"code\": \"{{qa_two_factor_code}}\",\n    \"method\": \"ga\",\n    \"type\": \"release\",\n    \"gaSecret\": \"{{qa_two_factor_code}}\"\n}"
                    },
                    "url": {
                      "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
                      "protocol": "{{protocol}}",
                      "host": [
                        "{{host}}"
                      ],
                      "path": [
                        "{{path_prefix}}",
                        ":version",
                        ":category",
                        ":request"
                      ],
                      "variable": [
                        {
                          "key": "version",
                          "value": "v1"
                        },
                        {
                          "key": "category",
                          "value": "account"
                        },
                        {
                          "key": "request",
                          "value": "two-factor"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Notifications",
          "item": [
            {
              "name": "Get notifications settings",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "87b7d0e2-2809-427e-958a-cdaa3688774c",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "10734b83-20c1-4290-a636-f42d96d58131",
                    "exec": [
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['active', 'options'],",
                      "    properties: {",
                      "        active: {",
                      "            type: 'string'",
                      "        },",
                      "        options: {",
                      "            type: 'array',",
                      "        }",
                      "    }",
                      "}",
                      "",
                      "var jsonData = pm.response.json();",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('validate response', function() {",
                      "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:subcategory/:request",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    ":version",
                    ":category",
                    ":subcategory",
                    ":request"
                  ],
                  "variable": [
                    {
                      "key": "version",
                      "value": "v1"
                    },
                    {
                      "key": "category",
                      "value": "account"
                    },
                    {
                      "key": "subcategory",
                      "value": "settings"
                    },
                    {
                      "key": "request",
                      "value": "notification"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update notifications settings",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2fea5bf7-22ef-4e17-9aad-848666c3dbfb",
                    "exec": [
                      "var dataShema = {",
                      "    type: 'object',",
                      "    required: ['active', 'options'],",
                      "    properties: {",
                      "        active: {",
                      "            type: 'string'",
                      "        },",
                      "        options: {",
                      "            type: 'array',",
                      "        }",
                      "    }",
                      "}",
                      "",
                      "var jsonData = pm.response.json();",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('validate response', function() {",
                      "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "uuid",
                    "type": "text",
                    "value": "{{uuid}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"options\": [\n        {\n        \t\"key\": \"bitcoins_confirmed\",\n            \"value\": true\n        },\n        {\n        \t\"key\": \"bitcoins_incoming\",\n            \"value\": true\n        },\n        {\n        \t\"key\": \"bitcoins_purchased\",\n            \"value\": true\n        },\n        {\n        \t\"key\": \"bitcoins_sold\",\n            \"value\": true\n        },\n        {\n        \t\"key\": \"incoming_trade\",\n            \"value\": true\n        },\n        {\n        \t\"key\": \"offer_viewed\",\n            \"value\": true\n        },\n        {\n        \t\"key\": \"partner_paid\",\n            \"value\": true\n        },\n        {\n        \t\"key\": \"profile_viewed\",\n            \"value\": true\n        },\n        {\n        \t\"key\": \"trade_cancelled\",\n            \"value\": true\n        }\n    ],\n    \"active\": \"mobile\"\n}"
                },
                "url": {
                  "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:subcategory/:request",
                  "protocol": "{{protocol}}",
                  "host": [
                    "{{host}}"
                  ],
                  "path": [
                    "{{path_prefix}}",
                    ":version",
                    ":category",
                    ":subcategory",
                    ":request"
                  ],
                  "variable": [
                    {
                      "key": "version",
                      "value": "v1"
                    },
                    {
                      "key": "category",
                      "value": "account"
                    },
                    {
                      "key": "subcategory",
                      "value": "settings"
                    },
                    {
                      "key": "request",
                      "value": "notification"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Send email confirmation",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d35149ad-b3c0-4c7e-8dc7-636deb35eb32",
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.email).to.eql(pm.environment.get(\"user_email\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d638cdc4-55d3-412e-946c-88ad1aa13e01",
                "exec": [
                  "//Generate UUID and set as environmental variable as well as use same generated UUID for email variable and generate phone number",
                  "var uuid = require('uuid');",
                  "var myUUID = uuid.v4();",
                  "pm.environment.set('uuid', myUUID);",
                  "pm.environment.set('user_email', myUUID + \"@paxful.com\");",
                  "var host = pm.environment.get(\"host\");",
                  "var uuid = pm.environment.get(\"uuid\");",
                  "function send(request) {",
                  "    pm.sendRequest(request, function(err, res) {",
                  "//   console.log(err ? err : res.json());",
                  "});",
                  "}",
                  "const userDevice = {",
                  "  url: 'https://' + host + '/mobile/v1/auth/user-device',",
                  "  method: 'POST',",
                  "  header: 'uuid:' + uuid,",
                  "};",
                  "var user_email = pm.environment.get(\"user_email\");",
                  "var user_password = pm.environment.get(\"user_password\");",
                  "const register = {",
                  "  url: 'https://' + host + '/mobile/v1.2/auth/register',",
                  "  method: 'POST',",
                  "  header: ['uuid: ' + uuid, 'Content-Type: application/json'],",
                  "  body: {",
                  "      mode: 'raw',",
                  "      raw: JSON.stringify({",
                  "        email: user_email,",
                  "        emailConfirmation: user_email,",
                  "        password: user_password,",
                  "        privacyPolicyConfirmed: true",
                  "      })",
                  "  }",
                  "};",
                  "send(userDevice);",
                  "",
                  "pm.sendRequest(register, function(err, res) {",
                  "    pm.environment.set('token', res.json().data.token);",
                  "//   console.log(err ? err : res.json());",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "uuid",
                "value": "{{uuid}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"code\": \"{{qa_two_factor_code}}\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                ":version",
                ":category",
                ":request"
              ],
              "variable": [
                {
                  "key": "version",
                  "value": "v1"
                },
                {
                  "key": "category",
                  "value": "account"
                },
                {
                  "key": "request",
                  "value": "send-email-confirmation"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Verify email",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d268fe4b-fa0d-4c08-8b9d-cbb2db266931",
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.email).to.eql(pm.environment.get(\"user_email\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "uuid",
                "value": "{{uuid}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"code\": \"{{qa_two_factor_code}}\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                ":version",
                ":category",
                ":request"
              ],
              "variable": [
                {
                  "key": "version",
                  "value": "v1"
                },
                {
                  "key": "category",
                  "value": "account"
                },
                {
                  "key": "request",
                  "value": "verify-email-confirmation"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Settings",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "9477f79f-2934-411a-856e-7484ea20e677",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/account/settings",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "account",
                "settings"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Verification Info",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "cb5595b6-e936-4c0c-8cfc-04c9f73df28f",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "lang",
                "value": "ru",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/account/verification/data",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "account",
                "verification",
                "data"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Process ID Verification",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "1ae35784-991e-4bed-b4f9-b3d45712ca48",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"country_iso3\": \"AFG\",\n\t\"document_type\": \"BS\",\n\t\"region_name\": \"region\",\n\t\"city_name\": \"city\",\n\t\"address_line_1\": \"Ne dom i ne ulitca\",\n\t\"zip_code\": \"000000\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/account/verification/document",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "account",
                "verification",
                "document"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get 2FA Secret",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fc13207d-c1aa-4dbe-9e2a-a4af4563bfed",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/account/two-factor-secret",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "account",
                "two-factor-secret"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get 2FA",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "1cc7492c-bf71-4279-91c5-5fd97dcb395b",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              }
            ],
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/account/two-factor?type=login",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "account",
                "two-factor"
              ],
              "query": [
                {
                  "key": "type",
                  "value": "login"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update 2FA",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "0940466e-2126-4de4-86ea-1ec635d36858",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"method\": \"none\",\n\t\"code\": \"000000\",\n\t\"type\": \"release\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/account/two-factor",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "account",
                "two-factor"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Set Settings",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "uuid",
                "value": "{{uuid}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n        \"userId\": {{user_id}},\n        \"activatedEmail\": true,\n        \"username\": \"DPtest\",\n        \"canChangeUsername\": false,\n        \"avatarUrl\": \"/2/images/avatar.png\",\n        \"phone\": \"\",\n        \"phoneActive\": false,\n        \"notifyNotEmailMessages\": false,\n        \"notifySmsBitcoinsConfirmed\": false,\n        \"notifySmsIncomingTrade\": true,\n        \"userTimezone\": \"America/New_York\",\n        \"soundNotifications\": true,\n        \"feedbackPositive\": 0,\n        \"citizenshipId\": 1,\n        \"isSecurityQuestionsAnswered\": false,\n        \"canSetUpSecurityQuestions\": true,\n        \"affiliateCode\": \"\",\n        \"isCanChangeEmail\": false,\n        \"locationId\": 5128581,\n        \"forwardBitcoins\": false,\n        \"forwardAddress\": null,\n        \"firstName\": null,\n        \"lastName\": null,\n        \"twoFactorWithdrawal\": \"ga\",\n        \"twoFactorLogin\": \"ga\",\n        \"notifyEmailTradeMessagesInterval\": 10,\n        \"bio\": null,\n        \"emailSubscribed\": true,\n        \"fiatCurrencyId\": 26,\n        \"ignoreSurveys\": true\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/account/settings",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "account",
                "settings"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Change Password",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"oldPass\": {{user_password}},\n  \"newPass\": {{user_password}},\n  \"confirmNewPass\": {{user_password}}\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/account/change-password",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "account",
                "change-password"
              ]
            }
          },
          "response": []
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "{{token}}",
            "type": "string"
          }
        ]
      },
      "protocolProfileBehavior": {}
    },
    {
      "name": "Localization",
      "item": [
        {
          "name": "Languages",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bf23d2a3-ccb6-453f-b3fd-d14996ac365b",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "9515cabc-37a7-4048-9e35-608f39c84c99",
                "exec": [
                  "var jsonData = pm.response.json().data;",
                  "const customerSchema = {",
                  "  \"required\": [\"languages\", \"meta\", \"items\"],",
                  "  \"properties\": {",
                  "    \"meta\": {",
                  "      \"count\": \"number\",",
                  "      \"offset\": null,",
                  "      \"limit\": null",
                  "    },",
                  "    \"items\": {",
                  "      \"type\": \"object\",",
                  "    }",
                  "  }",
                  "};",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(customerSchema);",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/localization/languages",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v2",
                "localization",
                "languages"
              ]
            },
            "description": "List of taxonomies"
          },
          "response": []
        },
        {
          "name": "Version",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "f8616c16-50e2-49c5-9a59-373744818ab0",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "78a321db-7bd5-4932-9a2f-c90429587c4e",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.environment.set(\"web_token\", jsonData.data.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/localization/version",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v2",
                "localization",
                "version"
              ]
            },
            "description": "List of taxonomies"
          },
          "response": []
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Notification",
      "item": [
        {
          "name": "Get Last",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "2d3e520f-7ab3-49eb-aafa-e42b9a725296",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "f73095b7-56e1-43a5-a5fe-315f0a46c802",
                "exec": [
                  "var jsonData = pm.response.json().data;",
                  "const customerSchema = {",
                  "  \"required\": [\"languages\", \"meta\", \"items\"],",
                  "  \"properties\": {",
                  "    \"meta\": {",
                  "      \"count\": \"number\",",
                  "      \"offset\": null,",
                  "      \"limit\": null",
                  "    },",
                  "    \"items\": {",
                  "      \"type\": \"object\",",
                  "    }",
                  "  }",
                  "};",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(customerSchema);",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/notifications",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v2",
                "notifications"
              ]
            },
            "description": "List of taxonomies"
          },
          "response": []
        },
        {
          "name": "Mark as read",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "67f498c9-c2f1-49f8-9701-fae79fdab826",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "2af554de-9578-4cab-adaf-50a07c11bd60",
                "exec": [
                  "var jsonData = pm.response.json().data;",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/notifications/mark-as-read",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v2",
                "notifications",
                "mark-as-read"
              ]
            },
            "description": "List of taxonomies"
          },
          "response": []
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Trades",
      "item": [
        {
          "name": "Active Trades",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "193aa408-b893-4aef-b5fe-0c183d6f2104",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b1abea2f-e0f1-4631-839b-9bf3a4034b31",
                "exec": [
                  "var jsonData = pm.response.json().data;",
                  "const customerSchema = {",
                  "  \"required\": [\"trades\", \"meta\", \"items\"],",
                  "  \"properties\": {",
                  "    \"meta\": {",
                  "      \"count\": \"number\",",
                  "      \"offset\": null,",
                  "      \"limit\": null",
                  "    },",
                  "    \"items\": {",
                  "      \"type\": \"object\",",
                  "    }",
                  "  }",
                  "};",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(customerSchema);",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/trades/active",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v2",
                "trades",
                "active"
              ]
            },
            "description": "List of taxonomies"
          },
          "response": []
        },
        {
          "name": "Completed Trades",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "eb4d3fde-0cc0-415d-a9e1-8ea58902b466",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "fa29165c-caae-40ce-9220-9f1279dd18f8",
                "exec": [
                  "var jsonData = pm.response.json().data;",
                  "const customerSchema = {",
                  "  \"required\": [\"languages\", \"meta\", \"items\"],",
                  "  \"properties\": {",
                  "    \"meta\": {",
                  "      \"count\": \"number\",",
                  "      \"offset\": null,",
                  "      \"limit\": null",
                  "    },",
                  "    \"items\": {",
                  "      \"type\": \"object\",",
                  "    }",
                  "  }",
                  "};",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(customerSchema);",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v2/trades/completed",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v2",
                "trades",
                "completed"
              ]
            },
            "description": "List of taxonomies"
          },
          "response": []
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Utils",
      "item": [
        {
          "name": "Request auto-login token",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d6f322ec-5937-48f8-943e-a73ad558440a",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "753750ef-7e86-4c0c-8451-b3eeab46f107",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var dataShema = {",
                  "    type: 'object',",
                  "    required: ['token', 'expireAt'],",
                  "    properties: {",
                  "        expireAt: {",
                  "            type: 'number'",
                  "        },",
                  "        token: {",
                  "            type: 'string'",
                  "        }",
                  "    } ",
                  "}",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.environment.set(\"web_token\", jsonData.data.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/auth/auto-login-token",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "auth",
                "auto-login-token"
              ]
            },
            "description": "Authorize user"
          },
          "response": []
        },
        {
          "name": "Regenerate auth token",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "cd28b7e4-eaf7-49d7-b989-1171bfa335f7",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "6c04d658-6333-416a-bb49-cd510310cd89",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var dataShema = {",
                  "    type: 'object',",
                  "    required: ['token', 'expireAt'],",
                  "    properties: {",
                  "        expireAt: {",
                  "            type: 'number'",
                  "        },",
                  "        token: {",
                  "            type: 'string'",
                  "        }",
                  "    } ",
                  "}",
                  "",
                  "pm.test('validate response', function() {",
                  "  pm.expect(jsonData.data).to.be.jsonSchema(dataShema);",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.environment.set(\"token\", jsonData.data.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "uuid",
                "value": "{{uuid}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/v1/auth/regenerate-token",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                "v1",
                "auth",
                "regenerate-token"
              ]
            },
            "description": "Authorize user"
          },
          "response": []
        },
        {
          "name": "Register new device (UUID, email and phone)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "9354281d-84f4-4f44-98c0-c0279354bf91",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "9ced6f17-5600-4d95-b04d-492b3127c443",
                "exec": [
                  "//Generate UUID and set as environmental variable as well as use same generated UUID for email variable and generate phone number",
                  "var uuid = require('uuid');",
                  "var myUUID = uuid.v4();",
                  "pm.environment.set('uuid', myUUID);",
                  "pm.environment.set('user_email', myUUID + \"@paxful.com\");",
                  "",
                  "pm.test(\"Status code is 202\", function() {",
                  "    pm.response.to.have.status(202);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "uuid",
                "value": "{{uuid}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                ":version",
                ":category",
                ":request"
              ],
              "variable": [
                {
                  "key": "version",
                  "value": "v1"
                },
                {
                  "key": "category",
                  "value": "auth"
                },
                {
                  "key": "request",
                  "value": "user-device"
                }
              ]
            },
            "description": "Register uuid of device"
          },
          "response": []
        },
        {
          "name": "Register new device (UUID, email and phone)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "23dd1485-333d-4479-bb7a-db258c9a3955",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "de23056c-9019-4790-abe7-be32fdb71beb",
                "exec": [
                  "//Generate UUID and set as environmental variable as well as use same generated UUID for email variable and generate phone number",
                  "var uuid = require('uuid');",
                  "var myUUID = uuid.v4();",
                  "pm.environment.set('uuid', myUUID);",
                  "pm.environment.set('user_email', myUUID + \"@paxful.com\");",
                  "",
                  "",
                  "pm.test(\"Status code is 202\", function() {",
                  "    pm.response.to.have.status(202);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "uuid",
                "value": "{{uuid}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                ":version",
                ":category",
                ":request"
              ],
              "variable": [
                {
                  "key": "version",
                  "value": "v1"
                },
                {
                  "key": "category",
                  "value": "auth"
                },
                {
                  "key": "request",
                  "value": "user-device"
                }
              ]
            },
            "description": "Register uuid of device"
          },
          "response": []
        },
        {
          "name": "Logout current user",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a6e046fd-37e1-4319-ab31-8988a8eec77e",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "c5414e3f-ba0e-4b92-9778-6c1de25112ad",
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});",
                  "",
                  "pm.test(\"Response is success\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.success).to.be.eql(true);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "uuid",
                "type": "text",
                "value": "{{uuid}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{host}}/{{path_prefix}}/:version/:category/:request",
              "protocol": "{{protocol}}",
              "host": [
                "{{host}}"
              ],
              "path": [
                "{{path_prefix}}",
                ":version",
                ":category",
                ":request"
              ],
              "variable": [
                {
                  "key": "version",
                  "value": "v1"
                },
                {
                  "key": "category",
                  "value": "auth"
                },
                {
                  "key": "request",
                  "value": "logout"
                }
              ]
            },
            "description": "Authorize user"
          },
          "response": []
        }
      ],
      "protocolProfileBehavior": {}
    }
  ],
  "auth": {
    "type": "bearer"
  },
  "protocolProfileBehavior": {}
}
